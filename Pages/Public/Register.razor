@page "/register"

@inject NavigationManager Navigation
@inject IAuthService AuthService

<MudPaper Class="pa-6 mx-auto mt-12" Style="max-width:400px">
    <MudText Typo="Typo.h5" Class="mb-4">Register</MudText>

    <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <MudTextField @bind-Value="registerModel.Username" Label="Username" Required="true" For="@(() => registerModel.Username)" />
        <MudTextField @bind-Value="registerModel.Password" Label="Password" Required="true" InputType="InputType.Password" For="@(() => registerModel.Password)" />
        <MudTextField @bind-Value="registerModel.Firstname" Label="First Name" Required="true" For="@(() => registerModel.Firstname)" />
        <MudTextField @bind-Value="registerModel.Lastname" Label="Last Name" Required="true" For="@(() => registerModel.Lastname)" />
        <MudTextField @bind-Value="registerModel.Email" Label="Email" Required="true" For="@(() => registerModel.Email)" />

        @if (!string.IsNullOrEmpty(error))
        {
            <MudText Color="Color.Error">@error</MudText>
        }

        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" FullWidth="true">Register</MudButton>
    </EditForm>
</MudPaper>

@code {
    private RegisterUserDto registerModel = new();
    private string? error;

    private async Task HandleRegister()
    {
        error = null;

        bool success = await AuthService.RegisterAsync(registerModel);
        if (success)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            error = "Registration failed. Please check your inputs and try again.";
        }
    }
}
