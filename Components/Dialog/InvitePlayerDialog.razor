@using PubQuizOrganizerFrontend.Models.Dto.QuizDto
@inject IOrganizationService OrganizationService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-4">Invite Host to Organization</MudText>

        @if (Quizzes == null || !Quizzes.Any())
        {
            <MudText>No quizzes available.</MudText>
        }
        else
        {
            <MudList T="QuizMinimalDto" Dense="true">
                @foreach (var quiz in Quizzes)
                {
                    <MudListItem Class="pa-2">
                        <MudGrid Class="w-100">
                            <MudItem xs="2" sm="1" Class="d-flex align-center">
                                <MudAvatar Size="Size.Medium">
                                    <MudImage Src="@($"{MediaServerPaths.GetPublicPath(MediaServerResource.User)}{quiz.ProfileImage}")"
                                    Alt="@quiz.Name"
                                    Style="width: 100%; height: 100%; object-fit: cover;" />
                                </MudAvatar>
                            </MudItem>

                            <MudItem xs="7" sm="9" Class="d-flex flex-column justify-center">
                                <MudText Typo="Typo.subtitle1">@quiz.Name</MudText>
                                <MudText Typo="Typo.body2" Color="Color.Secondary">
                                    Rating: @quiz.Rating
                                </MudText>
                            </MudItem>

                            <MudItem xs="3" sm="2" Class="d-flex justify-end align-center">
                                <MudButton Size="Size.Small" Color="Color.Primary"
                                OnClick="() => Invite(quiz.Id)">
                                    Invite
                                </MudButton>
                            </MudItem>
                        </MudGrid>
                    </MudListItem>
                }
            </MudList>
        }
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="() => MudDialog.Close()">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public IEnumerable<QuizMinimalDto> Quizzes { get; set; } = [];
    [Parameter] public int HostId { get; set; }

    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;

    private async Task Invite(int quizId)
    {
        try
        {
            await OrganizationService.InviteHostToOrganization(new QuizInvitationRequestDto
            {
                UserId = HostId,
                QuizId = quizId
            });

            Snackbar.Add("Invite sent!", Severity.Success);

            MudDialog.Close(true);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);

            MudDialog.Cancel();
        }
    }
}
